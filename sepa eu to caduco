import java.util.Scanner;
public class Main {
    static ClasseVetor vetor = new ClasseVetor(5);
    static Scanner teclado = new Scanner(System.in);
    static int escolha = -1;
    public static void main(String[] args) {

        while(escolha != 0){
            mostraMenu();
            escolha = teclado.nextInt();
            System.out.println();

            switch (escolha){
                case 0 -> encerraTudo();
                case 1 -> vetor.preencheSemDuplicados();
                case 2 -> vetor.preencheCrescente();
                case 3 -> vetor.inserePosicao();
                case 4 -> vetor.apresentaVetor();
                case 5 -> vetor.informaQuantosElementos();
                case 6 -> vetor.informaMaiorMenor();
                case 7 -> vetor.apagaPosicao();
                case 8 -> vetor.apagaValor();
                case 9 -> vetor.consultaSequencial();
                case 10 -> vetor.consultaBinaria();
                case 11 -> vetor.ordenaBubble();
                case 12 -> vetor.ordenaInsertion();
                case 13 -> vetor.ordenaSelection();
                case 15 -> vetor.zerarVetor();
                default -> System.out.println("\nOpção inválida. Tente novamente\n");
            }
        }
    }
    static void mostraMenu(){
        System.out.println(">>>>>>>>>>>>>>>>>> MENU <<<<<<<<<<<<<<<<<<<<");
        System.out.println("1) Inserir valores aleatório não duplicados");
        System.out.println("2) Inserir valores aleatórios em ordem crescente");
        System.out.println("3) Inserir um valor em determinada posição");
        System.out.println("4) Apresentar o vetor");
        System.out.println("5) Informar quantos elementos válidos estão no vetor");
        System.out.println("6) Informar o maior e menor valor contido no vetor");
        System.out.println("7) Apagar uma determinada posição do vetor");
        System.out.println("8) Apagar um determinado valor do vetor");
        System.out.println("9) Consulta sequencial");
        System.out.println("10) Consulta binária");
        System.out.println("11) Ordenação Bubblesort");
        System.out.println("12) Ordenação Insertionsort");
        System.out.println("13) Ordenação Selectionsort");
        System.out.println("14) Ordenação Quicksort");
        System.out.println("15) Zerar vetor");
        System.out.println("0) Encerrar programa");
        System.out.print("Escolha: ");
    }

    static void encerraTudo(){
        System.out.println("Programa encerrado!!!!");
        escolha = 0;
    }
}

import java.util.Random;
import java.util.Scanner;

public class ClasseVetor {
    Random valorAleatorio = new Random();
    Scanner teclado = new Scanner(System.in);
    int [] vetorInterno;
    int quantosOcupados;
    int duplicados;
    boolean ordenados;

    public ClasseVetor (int tamanhoVetor){
        vetorInterno = new int[tamanhoVetor];
        quantosOcupados = 0;
        duplicados = 0;
    }
    public void zerarVetor(){
        for(int i = 0; i< vetorInterno.length; i++){
            vetorInterno[i] = 0;
        }

        System.out.println("O vetor foi zerado!!");
        System.out.println();
    }
    public void preencheSemDuplicados(){
        for(int i = 0; i < vetorInterno.length; i++){
            vetorInterno[i] = geraAleatorio();

        }
        for(int i = 0; i < vetorInterno.length; i++){
            for(int j = 0; j < i; j++){
                if(vetorInterno[j] == vetorInterno[i]){
                    duplicados++;
                }
            }
        }

        System.out.println("Os valores foram adicionados!!");
        ordenados = false;

        if(duplicados != 0){
            System.out.println("Existem números duplicados!!!!!");
        }

        System.out.println();
    }
    public void preencheCrescente(){
        vetorInterno[0] = geraAleatorio();

        for(int i = 1; i < vetorInterno.length; i++){
            vetorInterno[i] = (geraAleatorio() + vetorInterno[i - 1]);
        }

        System.out.println("Os valores foram adicionados!!");
        ordenados = true;

        System.out.println();
    }
    public void informaQuantosElementos(){
        for(int i = 0; i < vetorInterno.length; i++){
            if(vetorInterno[i] != 0){
                quantosOcupados++;
            }
        }

        System.out.println("Existem "+ quantosOcupados +" valores ocupados no vetor!!!");
        System.out.println();
    }
    public void informaMaiorMenor(){
        int maior, menor;

        maior = menor = vetorInterno[0];

        for(int i = 1; i < vetorInterno.length; i++){
            if(vetorInterno[i] > maior){
                maior = vetorInterno[i];
            }
            if(vetorInterno[i] < menor){
                menor = vetorInterno[i];
            }
        }

        System.out.println("O maior valor contido no vetor é: "+ maior);
        System.out.println("O menor valor contido no vetor é: "+ menor);
        System.out.println();
    }
    public void apresentaVetor(){
        for(int i = 0; i < vetorInterno.length; i++){
            System.out.print("[ "+ vetorInterno[i] +" ]");

        }
        System.out.println();
        System.out.println();
    }
    public void inserePosicao(){
        int posicao;

        System.out.println("Em qual posição você deseja inserir um valor?\n");
        System.out.print("Posição: ");
        posicao = teclado.nextInt();

        for(int i = 0; i < vetorInterno.length; i++){
            if(posicao == i){
                System.out.println("A posição foi encontrada!!");
                System.out.println("Qual valor você deseja adicionar?\n");
                System.out.print("Valor: ");
                vetorInterno[posicao] = teclado.nextInt();

                while(vetorInterno[posicao] < 1){
                    System.out.println("Esse número não, parça. Tenta de novo");
                    System.out.print("Valor: ");
                    vetorInterno[posicao] = teclado.nextInt();
                }
            }
        }
        System.out.println();
    }
    public void apagaValor(){
        int valor;

        System.out.println("Em qual posição você deseja apagar um valor?\n");
        System.out.print("Posição: ");
        valor = teclado.nextInt();

        for(int i = 0; i < vetorInterno.length; i++){
            if(valor == vetorInterno[i]){
                System.out.println("O valor foi encontrado!!");
                vetorInterno[i] = 0;
                System.out.println("O valor foi apagado!!");

                quantosOcupados--;
            }
        }
        System.out.println();
    }
    public void apagaPosicao(){
        int posicao;

        System.out.println("Em qual posição você deseja apagar um valor?\n");
        System.out.print("Posição: ");
        posicao = teclado.nextInt();

        for(int i = 0; i < vetorInterno.length; i++){
            if(posicao == i){
                System.out.println("A posição foi encontrada!!");
                vetorInterno[posicao] = 0;
                System.out.println("O valor da posicao foi apagado!!");

            }
            quantosOcupados--;
        }
        System.out.println();
    }
    public void consultaSequencial(){
        int valorConsulta, anotar = 0, posicao = 0;

        System.out.print("Insira o valor a ser consultado: ");
        valorConsulta = teclado.nextInt();

        for (int i = 0; i < vetorInterno.length; i++) {
            if (valorConsulta == vetorInterno[i]) {
                anotar = 1;
                posicao = i;
                i = vetorInterno.length;
            }
        }

        if (anotar == 1) {
            System.out.println("O valor foi cadastrado na posição: " + posicao);

        } else {

            System.out.println("O valor não foi cadastrado");
        }

        System.out.println();
    }
    public void consultaBinaria(){
        int inicio, fim, valorConsulta, posicao;

        inicio = 0;
        fim = (vetorInterno.length - 1);
        posicao = -1;

        System.out.print("Insira o valor a ser consultado: ");
        valorConsulta = teclado.nextInt();

        while (inicio <= fim) {
            int meio = (inicio + fim) / 2;

            if (vetorInterno[meio] == valorConsulta) {
                posicao = meio;
                inicio = (vetorInterno.length + 1);

            } else if (vetorInterno[meio] < valorConsulta) {
                inicio = meio + 1;

            } else {
                fim = meio - 1;
            }
        }

        if (posicao != -1) {
            System.out.println("O valor foi cadastrado na posição " + posicao);
        } else {
            System.out.println("O valor não foi cadastrado");
        }

        System.out.println();
    }
    public void ordenaBubble(){
        int ultimo, aux;

        if(ordenados == true){
            System.out.println("O vetor já está ordenado!!");
            System.out.println();

        }else {

            for (ultimo = (vetorInterno.length - 1); ultimo > 0; ultimo--) {
                for (int i = 0; i < ultimo; i++) {
                    if (vetorInterno[i] > vetorInterno[i + 1]) {
                        aux = vetorInterno[i];
                        vetorInterno[i] = vetorInterno[i + 1];
                        vetorInterno[i + 1] = aux;

                    }
                }
            }

            for (int i = 0; i < vetorInterno.length; i++){
                System.out.print("[ "+ vetorInterno[i]+" ] ");
            }

            System.out.println();
            System.out.println();
        }
    }
    public void ordenaInsertion(){
        int inicio, aux;

        if(ordenados == true){
            System.out.println("O vetor já está ordenado!!");
            System.out.println();

        }else {

            for (int i = 1; i < vetorInterno.length; i++) {
                aux = vetorInterno[i];
                inicio = i - 1;

                while ((inicio >= 0) && (vetorInterno[inicio] > aux)) {
                    vetorInterno[inicio + 1] = vetorInterno[inicio];
                    inicio = inicio - 1;

                }

                vetorInterno[inicio + 1] = aux;

            }

            for (int i = 0; i < vetorInterno.length; i++){
                System.out.print("[ "+ vetorInterno[i]+" ] ");
            }

            System.out.println();
            System.out.println();
        }
    }
    public void ordenaSelection(){
        int menor, aux;

        if(ordenados == true){
            System.out.println("O vetor já está ordenado!!");
            System.out.println();

        }else {

            for (int i = 0; i < vetorInterno.length; i++) {
                menor = i;

                for (int j = 0; j < vetorInterno.length; j++) {
                    if (vetorInterno[j] > vetorInterno[menor]) {
                        aux = vetorInterno[j];
                        vetorInterno[j] = vetorInterno[menor];
                        vetorInterno[menor] = aux;

                    }
                }
            }

            for (int i = 0; i < vetorInterno.length; i++){
                System.out.print("[ "+ vetorInterno[i]+" ] ");
            }

            System.out.println();
            System.out.println();
        }
    }
    public void ordenaQuick(){
        for(int i = 0; i < vetorInterno.length; i++){
            for(int j = i+1; j < vetorInterno.length; j++){
                if(vetorInterno[j] < vetorInterno[i]){
                    trocaValores(j, i);
                }
            }
        }
    }
    public int participation(int inicio, int fim) {
        int pivo, pos;

        pivo = vetorInterno[fim];
        pos = inicio;

        for(int i = inicio; i < fim; i++){
            if(vetorInterno[i] < pivo){
                vetorInterno[pos] = vetorInterno[i];
            }
        }

        return pos;

    }
    public int geraAleatorio(){
        int numeroAleatorio;

        numeroAleatorio = this.valorAleatorio.nextInt(10000);

        if(numeroAleatorio == 0){
            geraAleatorio();
        }

        return numeroAleatorio;
    }

    public void trocaValores(int primeiro, int segundo){
        int aux;

        aux = primeiro;
        primeiro = segundo;
        segundo = aux;

    }
}
